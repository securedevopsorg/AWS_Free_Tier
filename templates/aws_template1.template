{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Builds a S3 bucket, a VPC w/ 1 public subnet, an IGW, route tables, ACL, 2 EC2 instances, CodeDeploy and CodePipeline bits.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair for SSH access to the instances.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "AppName": {
      "Type": "String",
      "Description": "Name of the application.",
      "MinLength": "2",
      "MaxLength": "15",
      "Default": "app-name",
      "AllowedPattern": "[a-z0-9][-. a-z0-9]*",
      "ConstraintDescription": "Must be between 2 and 15 characters long, lowercase and may contain alphanumeric characters, hyphens (-), and dots (.), but must start with alphanumeric."
    },
    "AppSourceType": {
      "Type": "String",
      "Default": "S3",
      "AllowedValues": [
        "S3",
        "GitHub"
      ],
      "Description": "Source of your application's code"
    },
    "S3ArtifactObject": {
      "Type": "String",
      "Default": "samples/latest/aws-codedeploy-sample-tomcat.zip",
      "Description": "Application artfiact name in S3."
    },
    "S3ArtifactBucket": {
      "Type": "String",
      "Default": "aws-codedeploy-samples-us-east-1",
      "Description": "Name of the bucket that the application artifact will be based in."
    },
    "GitHubUser": {
      "Type": "String",
      "Default": "aGitHubUser",
      "Description": "Your GitHub username"
    },
    "GitHubToken": {
      "Type": "String",
      "NoEcho": "true",
      "Default": "oauthtoken1234",
      "Description": "Go to https://github.com/settings/tokens to create/find a token for your account"
    },
    "GitHubRepoName": {
      "Type": "String",
      "Default": "aws-codedeploy-sample-tomcat",
      "Description": "Name of the repository that your application is in. Not the Url."
    },
    "GitHubBranchName": {
      "Type": "String",
      "Default": "master",
      "Description": "Name of the branch that you want to pull from. Not the Url."
    },
    "YourIP": {
      "Description": "IP address to connect to SSH from. Check http://checkip.amazonaws.com/ to find yours.",
      "Type": "String",
      "Default": "999.999.999.999/32",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Application"
          },
          "Parameters": [
            "AppName",
            "AppSourceType"
          ]
        },
        {
          "Label": {
            "default": "Application Source - S3"
          },
          "Parameters": [
            "S3ArtifactBucket",
            "S3ArtifactObject"
          ]
        },
        {
          "Label": {
            "default": "Application Source - GitHub"
          },
          "Parameters": [
            "GitHubUser",
            "GitHubToken",
            "GitHubRepoName",
            "GitHubBranchName"
          ]
        },
        {
          "Label": {
            "default": "SSH & HTTP Configuration"
          },
          "Parameters": [
            "KeyName",
            "YourIP"
          ]
        }
      ]
    },
    "AWS::CloudFormation::Designer": {
      "944af4c9-8548-4a01-811c-af4768c326da": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "66fdade7-5fff-4e8a-b81a-a90861b8acf7": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "944af4c9-8548-4a01-811c-af4768c326da"
        ]
      },
      "b80be994-44ff-4baf-b07b-f1116a4c52a7": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 330
        },
        "z": 1,
        "embeds": []
      },
      "88c3b3a3-38cd-4e8c-bb31-febfe989db67": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 450
        },
        "z": 1,
        "embeds": []
      },
      "4c2f2811-b0b4-4d1a-8d31-53e638042d7e": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 570
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "b80be994-44ff-4baf-b07b-f1116a4c52a7"
        ],
        "dependson": [
          "88c3b3a3-38cd-4e8c-bb31-febfe989db67"
        ],
        "isrelatedto": [
          "88c3b3a3-38cd-4e8c-bb31-febfe989db67"
        ]
      },
      "01d26102-3208-499a-8e89-2e20a4265186": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 690
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "b80be994-44ff-4baf-b07b-f1116a4c52a7"
        ],
        "dependson": [
          "88c3b3a3-38cd-4e8c-bb31-febfe989db67"
        ],
        "isrelatedto": [
          "88c3b3a3-38cd-4e8c-bb31-febfe989db67"
        ]
      },
      "6020e18d-9d46-4cac-b3fe-c05ad57194f6": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 810
        },
        "z": 1,
        "embeds": []
      },
      "939320fe-e7e5-40e2-ad34-3539a3bfaa16": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 930
        },
        "z": 1,
        "embeds": []
      },
      "223e3c40-8d72-49ed-98a1-1c981bfcba0f": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 930
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "939320fe-e7e5-40e2-ad34-3539a3bfaa16"
        ]
      },
      "6d949b94-b925-4d44-a10a-1f56bea78a8d": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 930
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "939320fe-e7e5-40e2-ad34-3539a3bfaa16"
        ]
      },
      "59d4fd85-1ffe-4a7c-9f78-0a8d8ac4f17c": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 420,
          "y": 930
        },
        "z": 1,
        "embeds": []
      },
      "ce6f13b9-be78-46b1-aec5-740fa180f266": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 540,
          "y": 930
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "59d4fd85-1ffe-4a7c-9f78-0a8d8ac4f17c"
        ]
      },
      "1343f52e-77c8-4e05-959c-ebecc616b9f2": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 660,
          "y": 930
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "59d4fd85-1ffe-4a7c-9f78-0a8d8ac4f17c"
        ]
      },
      "f902cf83-3b08-4dde-a296-b3898b5e03f3": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 780,
          "y": 930
        },
        "z": 1,
        "embeds": []
      },
      "d84344f3-51b3-40e7-afda-730c5322cd98": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 900,
          "y": 930
        },
        "z": 1,
        "embeds": []
      },
      "e3fd2a89-b8df-4363-bc68-2260d7e87b18": {
        "size": {
          "width": 780,
          "height": 780
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": [
          "2154b707-328d-47d1-b65c-79f275a2207b",
          "0d52559d-06b8-4116-bbc5-0318facece16",
          "b98ac4ee-a451-40ed-9373-e5196ead064b",
          "d3a78299-f7d0-4c03-bd3c-55bbe593a805",
          "02ca2193-b60d-4198-aa87-25e8e89ad5ce"
        ]
      },
      "2154b707-328d-47d1-b65c-79f275a2207b": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 480,
          "y": 450
        },
        "z": 2,
        "parent": "e3fd2a89-b8df-4363-bc68-2260d7e87b18",
        "embeds": []
      },
      "0d52559d-06b8-4116-bbc5-0318facece16": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 600,
          "y": 450
        },
        "z": 2,
        "parent": "e3fd2a89-b8df-4363-bc68-2260d7e87b18",
        "embeds": []
      },
      "b98ac4ee-a451-40ed-9373-e5196ead064b": {
        "size": {
          "width": 330,
          "height": 240
        },
        "position": {
          "x": 90,
          "y": 540
        },
        "z": 2,
        "parent": "e3fd2a89-b8df-4363-bc68-2260d7e87b18",
        "embeds": [
          "190d0558-8f2f-45f7-a281-995da1f1199d",
          "b6ff4503-02b0-4a6c-b406-3b79cdbb55c7"
        ]
      },
      "190d0558-8f2f-45f7-a281-995da1f1199d": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 120,
          "y": 600
        },
        "z": 3,
        "parent": "b98ac4ee-a451-40ed-9373-e5196ead064b",
        "embeds": []
      },
      "b6ff4503-02b0-4a6c-b406-3b79cdbb55c7": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 240,
          "y": 600
        },
        "z": 3,
        "parent": "b98ac4ee-a451-40ed-9373-e5196ead064b",
        "embeds": []
      },
      "d3a78299-f7d0-4c03-bd3c-55bbe593a805": {
        "size": {
          "width": 240,
          "height": 240
        },
        "position": {
          "x": 480,
          "y": 150
        },
        "z": 2,
        "parent": "e3fd2a89-b8df-4363-bc68-2260d7e87b18",
        "embeds": [
          "c9bf032e-8416-4a5d-ae35-11f5186a1612"
        ]
      },
      "c9bf032e-8416-4a5d-ae35-11f5186a1612": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 510,
          "y": 210
        },
        "z": 3,
        "parent": "d3a78299-f7d0-4c03-bd3c-55bbe593a805",
        "embeds": [],
        "references": [
          "d84344f3-51b3-40e7-afda-730c5322cd98"
        ]
      },
      "53b333e9-0891-458f-a246-d028be25352e": {
        "source": {
          "id": "d84344f3-51b3-40e7-afda-730c5322cd98"
        },
        "target": {
          "id": "e3fd2a89-b8df-4363-bc68-2260d7e87b18"
        }
      },
      "02ca2193-b60d-4198-aa87-25e8e89ad5ce": {
        "size": {
          "width": 330,
          "height": 330
        },
        "position": {
          "x": 90,
          "y": 150
        },
        "z": 2,
        "parent": "e3fd2a89-b8df-4363-bc68-2260d7e87b18",
        "embeds": [
          "00f59588-15b2-4f97-9374-2e68e9a997e9",
          "e3d761e5-f992-498b-b5d5-51630f342eea",
          "6acd35ca-b1cc-403b-9f09-b964759ea498"
        ]
      },
      "00f59588-15b2-4f97-9374-2e68e9a997e9": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 120,
          "y": 210
        },
        "z": 3,
        "parent": "02ca2193-b60d-4198-aa87-25e8e89ad5ce",
        "embeds": [],
        "isrelatedto": [
          "2154b707-328d-47d1-b65c-79f275a2207b",
          "223e3c40-8d72-49ed-98a1-1c981bfcba0f",
          "6020e18d-9d46-4cac-b3fe-c05ad57194f6"
        ]
      },
      "4642a915-386c-4641-bb9b-71d0513760e4": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1020,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "references": [
          "6020e18d-9d46-4cac-b3fe-c05ad57194f6"
        ],
        "dependson": [
          "00f59588-15b2-4f97-9374-2e68e9a997e9"
        ]
      },
      "7b24b04e-4cf9-4697-84df-f24e8827c69d": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1020,
          "y": 210
        },
        "z": 1,
        "embeds": [],
        "dependson": [
          "4642a915-386c-4641-bb9b-71d0513760e4"
        ],
        "isrelatedto": [
          "00f59588-15b2-4f97-9374-2e68e9a997e9"
        ]
      },
      "f982d489-5dc3-4457-9616-a612d9a0ddb4": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 1020,
          "y": 330
        },
        "z": 1,
        "embeds": [],
        "dependson": [
          "7b24b04e-4cf9-4697-84df-f24e8827c69d"
        ],
        "isrelatedto": [
          "944af4c9-8548-4a01-811c-af4768c326da",
          "b80be994-44ff-4baf-b07b-f1116a4c52a7",
          "01d26102-3208-499a-8e89-2e20a4265186",
          "4c2f2811-b0b4-4d1a-8d31-53e638042d7e"
        ]
      },
      "e3d761e5-f992-498b-b5d5-51630f342eea": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 240,
          "y": 210
        },
        "z": 3,
        "parent": "02ca2193-b60d-4198-aa87-25e8e89ad5ce",
        "embeds": [],
        "isrelatedto": [
          "ce6f13b9-be78-46b1-aec5-740fa180f266",
          "0d52559d-06b8-4116-bbc5-0318facece16"
        ]
      },
      "6acd35ca-b1cc-403b-9f09-b964759ea498": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 120,
          "y": 330
        },
        "z": 3,
        "parent": "02ca2193-b60d-4198-aa87-25e8e89ad5ce",
        "embeds": [],
        "isrelatedto": [
          "ce6f13b9-be78-46b1-aec5-740fa180f266",
          "0d52559d-06b8-4116-bbc5-0318facece16"
        ]
      },
      "ffea89bb-1466-46a8-bdd5-e5af9e34773e": {
        "source": {
          "id": "b98ac4ee-a451-40ed-9373-e5196ead064b"
        },
        "target": {
          "id": "02ca2193-b60d-4198-aa87-25e8e89ad5ce"
        }
      },
      "e3643182-e11e-44c6-8522-e652870cb3c7": {
        "source": {
          "id": "d3a78299-f7d0-4c03-bd3c-55bbe593a805"
        },
        "target": {
          "id": "02ca2193-b60d-4198-aa87-25e8e89ad5ce"
        }
      }
    }
  },
  "Conditions": {
    "S3AsSource": {
      "Fn::Equals": [
        {
          "Ref": "AppSourceType"
        },
        "S3"
      ]
    },
    "GitHubAsSource": {
      "Fn::Equals": [
        {
          "Ref": "AppSourceType"
        },
        "GitHub"
      ]
    }
  },
  "Mappings": {
    "VPCIpSpace": {
      "us-east-1": {
        "RANGE": "10.42"
      },
      "us-west-2": {
        "RANGE": "10.43"
      }
    },
    "SubnetTypeIpRanges": {
      "public": {
        "RANGE": "0.0/17"
      }
    },
    "publicSubnetConfig": {
      "publicSubnet01": {
        "CIDR": "10.0/24"
      }
    },
    "instancesTypes": {
      "Demo": {
        "INST": "t2.nano"
      }
    },
    "AWSInstanceType2Virt": {
      "t2.nano": {
        "Virt": "HVM"
      },
      "t2.nano": {
        "Virt": "HVM"
      },
      "t2.nano": {
        "Virt": "HVM"
      },
      "t2.nano": {
        "Virt": "HVM"
      }
    },
    "AWSInstanceType2EBSOpt": {
      "t2.nano": {
        "EBSOpt": "false"
      },
      "t2.nano": {
        "EBSOpt": "false"
      },
      "t2.nano": {
        "EBSOpt": "false"
      },
      "t2.nano": {
        "EBSOpt": "false"
      }
    },
    "AWSRegionVirt2AMI": {
      "us-east-1": {
        "HVM": "ami-8fcee4e5"
      },
      "us-west-2": {
        "HVM": "ami-63b25203"
      }
    }
  },
  "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::FindInMap": [
                  "VPCIpSpace",
                  {
                    "Ref": "AWS::Region"
                  },
                  "RANGE"
                ]
              },
              ".",
              "0.0/16"
            ]
          ]
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CodeStarDemo-VPC"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e3fd2a89-b8df-4363-bc68-2260d7e87b18"
        }
      }
    },
    "publicSubnet01": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "CidrBlock": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::FindInMap": [
                  "VPCIpSpace",
                  {
                    "Ref": "AWS::Region"
                  },
                  "RANGE"
                ]
              },
              ".",
              {
                "Fn::FindInMap": [
                  "publicSubnetConfig",
                  "publicSubnet01",
                  "CIDR"
                ]
              }
            ]
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "publicSubnet01"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "02ca2193-b60d-4198-aa87-25e8e89ad5ce"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DemoVPCIGW"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d84344f3-51b3-40e7-afda-730c5322cd98"
        }
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "53b333e9-0891-458f-a246-d028be25352e"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicRouteTable"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d3a78299-f7d0-4c03-bd3c-55bbe593a805"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "c9bf032e-8416-4a5d-ae35-11f5186a1612"
        }
      }
    },
    "PublicSubnetRTAssociation01": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "publicSubnet01"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e3643182-e11e-44c6-8522-e652870cb3c7"
        }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkAcl"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b98ac4ee-a451-40ed-9373-e5196ead064b"
        }
      }
    },
    "InboundPublicNAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "2000",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b6ff4503-02b0-4a6c-b406-3b79cdbb55c7"
        }
      }
    },
    "OutboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "2000",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "190d0558-8f2f-45f7-a281-995da1f1199d"
        }
      }
    },
    "publicSubnetNetworkAclAssociation01": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "publicSubnet01"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ffea89bb-1466-46a8-bdd5-e5af9e34773e"
        }
      }
    },
    "S3Bucket": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "demo-",
              {
                "Ref": "AWS::Region"
              },
              "-",
              {
                "Ref": "AWS::AccountId"
              },
              "-",
              {
                "Ref": "AppName"
              }
            ]
          ]
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CodeStarDemo-S3Bucket"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "f902cf83-3b08-4dde-a296-b3898b5e03f3"
        }
      }
    },
    "WebAppRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSCodeDeployReadOnlyAccess",
          "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
        ],
        "Path": "/"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "59d4fd85-1ffe-4a7c-9f78-0a8d8ac4f17c"
        }
      }
    },
    "WebAppRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "BackendRole",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "cloudformation:DescribeStackResources",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:cloudformation:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":stack/",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "autoscaling:Describe*",
                "autoscaling:EnterStandby",
                "autoscaling:ExitStandby",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::demo-",
                      {
                        "Ref": "AWS::Region"
                      },
                      "-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AppName"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::demo-",
                      {
                        "Ref": "AWS::Region"
                      },
                      "-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AppName"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "WebAppRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "1343f52e-77c8-4e05-959c-ebecc616b9f2"
        }
      }
    },
    "WebAppInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "WebAppRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ce6f13b9-be78-46b1-aec5-740fa180f266"
        }
      }
    },
    "WebAppSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access on port 80",
        "VpcId": {
          "Ref": "MyVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::FindInMap": [
                      "VPCIpSpace",
                      {
                        "Ref": "AWS::Region"
                      },
                      "RANGE"
                    ]
                  },
                  ".",
                  "0.0/16"
                ]
              ]
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "123",
            "ToPort": "123",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "9418",
            "ToPort": "9418",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebAppSG"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "0d52559d-06b8-4116-bbc5-0318facece16"
        }
      }
    },
    "DevWebApp01": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionVirt2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Virt",
                {
                  "Fn::FindInMap": [
                    "instancesTypes",
                    "Demo",
                    "INST"
                  ]
                },
                "Virt"
              ]
            }
          ]
        },
        "InstanceType": {
          "Fn::FindInMap": [
            "instancesTypes",
            "Demo",
            "INST"
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "WebAppInstanceProfile"
        },
        "EbsOptimized": {
          "Fn::FindInMap": [
            "AWSInstanceType2EBSOpt",
            {
              "Fn::FindInMap": [
                "instancesTypes",
                "Demo",
                "INST"
              ]
            },
            "EBSOpt"
          ]
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Ref": "publicSubnet01"
            },
            "GroupSet": [
              {
                "Ref": "WebAppSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "yum install -y aws-cli\n",
                "cd /home/ec2-user/\n",
                "wget https://aws-codedeploy-",
                {
                  "Ref": "AWS::Region"
                },
                ".s3.amazonaws.com/latest/codedeploy-agent.noarch.rpm\n",
                "yum -y install codedeploy-agent.noarch.rpm\n",
                "service codedeploy-agent start\n",
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppName"
                  },
                  "-DevWebApp"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": "DevWebApp01"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6acd35ca-b1cc-403b-9f09-b964759ea498"
        }
      }
    },
    "ProdWebApp01": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionVirt2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Virt",
                {
                  "Fn::FindInMap": [
                    "instancesTypes",
                    "Demo",
                    "INST"
                  ]
                },
                "Virt"
              ]
            }
          ]
        },
        "InstanceType": {
          "Fn::FindInMap": [
            "instancesTypes",
            "Demo",
            "INST"
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "WebAppInstanceProfile"
        },
        "EbsOptimized": {
          "Fn::FindInMap": [
            "AWSInstanceType2EBSOpt",
            {
              "Fn::FindInMap": [
                "instancesTypes",
                "Demo",
                "INST"
              ]
            },
            "EBSOpt"
          ]
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Ref": "publicSubnet01"
            },
            "GroupSet": [
              {
                "Ref": "WebAppSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "yum install -y aws-cli\n",
                "cd /home/ec2-user/\n",
                "wget https://aws-codedeploy-",
                {
                  "Ref": "AWS::Region"
                },
                ".s3.amazonaws.com/latest/codedeploy-agent.noarch.rpm\n",
                "yum -y install codedeploy-agent.noarch.rpm\n",
                "service codedeploy-agent start\n",
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppName"
                  },
                  "-ProdWebApp"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": "ProdWebApp01"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e3d761e5-f992-498b-b5d5-51630f342eea"
        }
      }
    },
    "JenkinsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "939320fe-e7e5-40e2-ad34-3539a3bfaa16"
        }
      }
    },
    "JenkinsRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "JenkinsRole",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:AcknowledgeJob",
                "codepipeline:GetJobDetails",
                "codepipeline:PollForJobs",
                "codepipeline:PutJobFailureResult",
                "codepipeline:PutJobSuccessResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "JenkinsRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6d949b94-b925-4d44-a10a-1f56bea78a8d"
        }
      }
    },
    "JenkinsInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "JenkinsRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "223e3c40-8d72-49ed-98a1-1c981bfcba0f"
        }
      }
    },
    "JenkinsSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access on port 80",
        "VpcId": {
          "Ref": "MyVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "YourIP"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": {
              "Ref": "YourIP"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "123",
            "ToPort": "123",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "9418",
            "ToPort": "9418",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "JenkinsSG"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "2154b707-328d-47d1-b65c-79f275a2207b"
        }
      }
    },
    "JenkinsServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "java-1.7.0-openjdk": [],
                "java-1.7.0-openjdk-devel": []
              }
            },
            "files": {
              "/tmp/config.xml": {
                "source": "https://s3.amazonaws.com/aws-codedeploy-samples-us-east-1/templates/latest/Jenkins_Helper_Scripts/config.xml",
                "mode": "644"
              },
              "/tmp/hudson.tasks.Maven.xml": {
                "source": "https://s3.amazonaws.com/aws-codedeploy-samples-us-east-1/templates/latest/Jenkins_Helper_Scripts/hudson.tasks.Maven.xml",
                "mode": "644"
              },
              "/tmp/jenkins.mvn.GlobalMavenConfig.xml": {
                "source": "https://s3.amazonaws.com/aws-codedeploy-samples-us-east-1/templates/latest/Jenkins_Helper_Scripts/jenkins.mvn.GlobalMavenConfig.xml",
                "mode": "644"
              }
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "00f59588-15b2-4f97-9374-2e68e9a997e9"
        }
      },
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionVirt2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Virt",
                "t2.nano",
                "Virt"
              ]
            }
          ]
        },
        "NetworkInterfaces": [
          {
            "SubnetId": {
              "Ref": "publicSubnet01"
            },
            "GroupSet": [
              {
                "Ref": "JenkinsSG"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "EbsOptimized": {
          "Fn::FindInMap": [
            "AWSInstanceType2EBSOpt",
            "t2.nano",
            "EBSOpt"
          ]
        },
        "InstanceType": "t2.nano",
        "IamInstanceProfile": {
          "Ref": "JenkinsInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Update the AWS CLI to the latest version\n",
                "yum install -y aws-cli\n",
                "function error_exit\n",
                "{\n",
                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                {
                  "Ref": "JenkinsHostWaitHandle"
                },
                "'\n",
                "  exit 1\n",
                "}\n",
                "/opt/aws/bin/cfn-init -v -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r JenkinsServer --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Install Maven\n",
                "cd /tmp/\n",
                "MAVEN_VERSION=3.3.9\n",
                "wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\n",
                "tar xzvf apache-maven-$MAVEN_VERSION-bin.tar.gz -C /opt/\n",
                "ln -s /opt/apache-maven-$MAVEN_VERSION /opt/apache-maven\n",
                "rm /tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz\n",
                "# Install Jenkins\n",
                "wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\n",
                "rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\n",
                "yum install -y http://pkg.jenkins-ci.org/redhat/jenkins-1.658-1.1.noarch.rpm\n",
                "service jenkins start\n",
                "chkconfig jenkins on\n",
                "# Wait 30 seconds to allow Jenkins to startup\n",
                "echo \"Waiting 30 seconds for Jenkins to start.....\"\n",
                "sleep 30\n",
                "# Install the required plugins\n",
                "cd /var/lib/jenkins/plugins\n",
                "curl -O -L https://updates.jenkins-ci.org/latest/aws-codepipeline.hpi\n",
                "chown jenkins:jenkins *.hpi\n",
                "mv /tmp/hudson.tasks.Maven.xml /var/lib/jenkins/\n",
                "mv /tmp/jenkins.mvn.GlobalMavenConfig.xml /var/lib/jenkins/\n",
                "chown jenkins:jenkins /var/lib/jenkins/*.xml\n",
                "# Restarting Jenkins\n",
                "service jenkins restart\n",
                "echo \"Waiting 30 seconds for Jenkins to start.....\"\n",
                "sleep 30\n",
                "# configure our job\n",
                "/bin/sed -i \"s/APPNAME/",
                {
                  "Ref": "AppName"
                },
                "/g\" /tmp/config.xml\n",
                "/bin/sed -i \"s/REGION/",
                {
                  "Ref": "AWS::Region"
                },
                "/g\" /tmp/config.xml\n",
                "/usr/bin/java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080 create-job ",
                {
                  "Ref": "AppName"
                },
                "< /tmp/config.xml\n",
                "rm /tmp/config.xml\n",
                "# Set up port forwarding\n",
                "iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n",
                "iptables-save > /etc/sysconfig/iptables\n",
                "# If all went well, signal success\n",
                "/opt/aws/bin/cfn-signal -e $? -r 'Instance configuration complete' '",
                {
                  "Ref": "JenkinsHostWaitHandle"
                },
                "'\n",
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JenkinsServer"
          }
        ]
      }
    },
    "JenkinsHostWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "6020e18d-9d46-4cac-b3fe-c05ad57194f6"
        }
      }
    },
    "JenkinsHostWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "JenkinsServer",
      "Properties": {
        "Handle": {
          "Ref": "JenkinsHostWaitHandle"
        },
        "Timeout": "600"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "4642a915-386c-4641-bb9b-71d0513760e4"
        }
      }
    },
    "CodeDeployTrustRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
        ],
        "Path": "/"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "88c3b3a3-38cd-4e8c-bb31-febfe989db67"
        }
      }
    },
    "MyApp": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": {
          "Ref": "AppName"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b80be994-44ff-4baf-b07b-f1116a4c52a7"
        }
      }
    },
    "DevDeploymentGroup": {
      "DependsOn": "CodeDeployTrustRole",
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "MyApp"
        },
        "DeploymentGroupName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppName"
              },
              "-DevEnv"
            ]
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CodeDeployTrustRole",
            "Arn"
          ]
        },
        "Ec2TagFilters": [
          {
            "Key": "Environment",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppName"
                  },
                  "-DevWebApp"
                ]
              ]
            },
            "Type": "KEY_AND_VALUE"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "01d26102-3208-499a-8e89-2e20a4265186"
        }
      }
    },
    "ProdDeploymentGroup": {
      "DependsOn": "CodeDeployTrustRole",
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "MyApp"
        },
        "DeploymentGroupName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppName"
              },
              "-ProdEnv"
            ]
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CodeDeployTrustRole",
            "Arn"
          ]
        },
        "Ec2TagFilters": [
          {
            "Key": "Environment",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppName"
                  },
                  "-ProdWebApp"
                ]
              ]
            },
            "Type": "KEY_AND_VALUE"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "4c2f2811-b0b4-4d1a-8d31-53e638042d7e"
        }
      }
    },
    "CodePipelineTrustRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Sid": "1",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "944af4c9-8548-4a01-811c-af4768c326da"
        }
      }
    },
    "CodePipelineRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CodePipelinePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::demo-",
                      {
                        "Ref": "AWS::Region"
                      },
                      "-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AppName"
                      }
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codepipeline:*",
                "iam:ListRoles",
                "iam:PassRole",
                "codedeploy:CreateDeployment",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:RegisterApplicationRevision",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:DescribeEnvironments",
                "lambda:GetFunctionConfiguration",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodePipelineTrustRole"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "66fdade7-5fff-4e8a-b81a-a90861b8acf7"
        }
      }
    },
    "CustomJenkinsActionType": {
      "Type": "AWS::CodePipeline::CustomActionType",
      "DependsOn": "JenkinsHostWaitCondition",
      "Properties": {
        "Category": "Build",
        "Provider": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppName"
              },
              "-Jenkins"
            ]
          ]
        },
        "Version": "1",
        "ConfigurationProperties": [
          {
            "Key": "true",
            "Name": "ProjectName",
            "Queryable": "true",
            "Required": "true",
            "Secret": "false",
            "Type": "String"
          }
        ],
        "InputArtifactDetails": {
          "MaximumCount": 5,
          "MinimumCount": 0
        },
        "OutputArtifactDetails": {
          "MaximumCount": 5,
          "MinimumCount": 0
        },
        "Settings": {
          "EntityUrlTemplate": {
            "Fn::Join": [
              "",
              [
                "http://",
                {
                  "Fn::GetAtt": [
                    "JenkinsServer",
                    "PublicIp"
                  ]
                },
                "/job/{Config:ProjectName}"
              ]
            ]
          },
          "ExecutionUrlTemplate": {
            "Fn::Join": [
              "",
              [
                "http://",
                {
                  "Fn::GetAtt": [
                    "JenkinsServer",
                    "PublicIp"
                  ]
                },
                "/job/{Config:ProjectName}/{ExternalExecutionId}"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "7b24b04e-4cf9-4697-84df-f24e8827c69d"
        }
      }
    },
    "MyPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "DependsOn": "CustomJenkinsActionType",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AppName"
              },
              "-Pipeline"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineTrustRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "ApplicationSource",
                "InputArtifacts": [],
                "ActionTypeId": {
                  "Version": "1",
                  "Category": "Source",
                  "Owner": {
                    "Fn::If": [
                      "S3AsSource",
                      "AWS",
                      "ThirdParty"
                    ]
                  },
                  "Provider": {
                    "Fn::If": [
                      "S3AsSource",
                      "S3",
                      "GitHub"
                    ]
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "AppName"
                          },
                          "-SourceArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "Configuration": {
                  "Fn::If": [
                    "S3AsSource",
                    {
                      "S3Bucket": {
                        "Ref": "S3ArtifactBucket"
                      },
                      "S3ObjectKey": {
                        "Ref": "S3ArtifactObject"
                      }
                    },
                    {
                      "Owner": {
                        "Ref": "GitHubUser"
                      },
                      "Repo": {
                        "Ref": "GitHubRepoName"
                      },
                      "Branch": {
                        "Ref": "GitHubBranchName"
                      },
                      "OAuthToken": {
                        "Ref": "GitHubToken"
                      }
                    }
                  ]
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "ApplicationBuild",
                "InputArtifacts": [
                  {
                    "Name": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "AppName"
                          },
                          "-SourceArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "Custom",
                  "Version": "1",
                  "Provider": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AppName"
                        },
                        "-Jenkins"
                      ]
                    ]
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "AppName"
                          },
                          "-BuiltArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "Configuration": {
                  "ProjectName": {
                    "Ref": "AppName"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Beta",
            "Actions": [
              {
                "Name": "BetaDeploy",
                "InputArtifacts": [
                  {
                    "Name": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "AppName"
                          },
                          "-BuiltArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeDeploy"
                },
                "Configuration": {
                  "ApplicationName": {
                    "Ref": "MyApp"
                  },
                  "DeploymentGroupName": {
                    "Ref": "DevDeploymentGroup"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Prod",
            "Actions": [
              {
                "Name": "ProdDeploy",
                "InputArtifacts": [
                  {
                    "Name": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "AppName"
                          },
                          "-BuiltArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeDeploy"
                },
                "Configuration": {
                  "ApplicationName": {
                    "Ref": "MyApp"
                  },
                  "DeploymentGroupName": {
                    "Ref": "ProdDeploymentGroup"
                  }
                },
                "RunOrder": 1
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Fn::Join": [
              "",
              [
                "demo-",
                {
                  "Ref": "AWS::Region"
                },
                "-",
                {
                  "Ref": "AWS::AccountId"
                },
                "-",
                {
                  "Ref": "AppName"
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "f982d489-5dc3-4457-9616-a612d9a0ddb4"
        }
      }
    }
  },
  "Outputs": {
    "VpcId": {
      "Value": {
        "Ref": "MyVPC"
      },
      "Description": "VPC ID of newly created VPC"
    },
    "IGWId": {
      "Value": {
        "Ref": "InternetGateway"
      },
      "Description": "Internet Gateway ID"
    },
    "PublicSubnetA": {
      "Value": {
        "Ref": "publicSubnet01"
      },
      "Description": "Public Subnet in AZ A"
    },
    "DevInstanceID": {
      "Value": {
        "Ref": "DevWebApp01"
      },
      "Description": "DevWebApp01 Instance ID"
    },
    "DevWebApp01PublicIP": {
      "Value": {
        "Fn::GetAtt": [
          "DevWebApp01",
          "PublicIp"
        ]
      },
      "Description": "DevWebApp01 Public IP Address"
    },
    "ProdWebApp01InstanceID": {
      "Value": {
        "Ref": "ProdWebApp01"
      },
      "Description": "ProdWebApp01 Instance ID"
    },
    "ProdWebApp01PublicIP": {
      "Value": {
        "Fn::GetAtt": [
          "ProdWebApp01",
          "PublicIp"
        ]
      },
      "Description": "ProdWebApp01 Public IP Address"
    },
    "JenkinsInstanceID": {
      "Value": {
        "Ref": "JenkinsServer"
      },
      "Description": "Jenkins Instance ID"
    },
    "JenkinsPublicIP": {
      "Value": {
        "Fn::GetAtt": [
          "JenkinsServer",
          "PublicIp"
        ]
      },
      "Description": "Jenkins Public IP Address"
    },
    "AppSourceType": {
      "Value": {
        "Ref": "AppSourceType"
      },
      "Description": "The source type of the application"
    },
    "ApplicationSource": {
      "Value": {
        "Fn::If": [
          "S3AsSource",
          {
            "Fn::Join": [
              "",
              [
                "https://s3.amazonaws.com/",
                {
                  "Ref": "S3ArtifactBucket"
                },
                "/",
                {
                  "Ref": "S3ArtifactObject"
                }
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "https://github.com/",
                {
                  "Ref": "GitHubUser"
                },
                "/",
                {
                  "Ref": "GitHubRepoName"
                },
                "/tree/",
                {
                  "Ref": "GitHubBranchName"
                }
              ]
            ]
          }
        ]
      },
      "Description": "The source location of the application"
    }
  }
}